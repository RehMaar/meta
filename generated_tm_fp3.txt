'((read vs0)
  ((label 101)
   (:= pending (list (pair 'init vs0)))
   (:= marked '())
   (:= residual-code (list (generate-read '(read prog tape-right) vs0)))
   (:= pp (caar pending))
   (:= vs (cdar pending))
   (:= pending (cdr pending))
   (:= label (pair pp vs))
   (if (elem? label marked) (label 100) (label 97)))
  ((label 100) (if (null? pending) (label 99) (label 98)))
  ((label 99) (return (reverse residual-code)))
  ((label 98)
   (:= pp (caar pending))
   (:= vs (cdar pending))
   (:= pending (cdr pending))
   (:= label (pair pp vs))
   (if (elem? label marked) (label 100) (label 97)))
  ((label 97)
   (:= marked (cons (pair pp vs) marked))
   (:= code-block '())
   (if (equal? pp 'init) (label 96) (label 5)))
  ((label 96)
   (:= vs (update vs 'next-label (reduce '(caar prog) vs)))
   (:= code-block (extend (generate-assign 'tape-left ''() vs) code-block))
   (:= vs (update vs 'instr (reduce '(lookup prog next-label) vs)))
   (if (reduce '(equal? (car instr) 'goto) vs) (label 95) (label 88)))
  ((label 95)
   (:= vs (update vs 'next-label (reduce '(cadr instr) vs)))
   (if (reduce '(not (has-label next-label prog)) vs) (label 94) (label 86)))
  ((label 94)
   (:=
    code-block
    (extend (generate-return '(cons tape-left tape-right) vs) code-block))
   (:= residual-code (cons (cons label (reverse code-block)) residual-code))
   (if (null? pending) (label 93) (label 92)))
  ((label 93) (return (reverse residual-code)))
  ((label 92)
   (:= pp (caar pending))
   (:= vs (cdar pending))
   (:= pending (cdr pending))
   (:= label (pair pp vs))
   (if (elem? label marked) (label 91) (label 90)))
  ((label 91) (if (null? pending) (label 93) (label 92)))
  ((label 90)
   (:= marked (cons (pair pp vs) marked))
   (:= code-block '())
   (if (equal? pp 'init) (label 89) (label 69)))
  ((label 89)
   (:= vs (update vs 'next-label (reduce '(caar prog) vs)))
   (:= code-block (extend (generate-assign 'tape-left ''() vs) code-block))
   (:= vs (update vs 'instr (reduce '(lookup prog next-label) vs)))
   (if (reduce '(equal? (car instr) 'goto) vs) (label 95) (label 88)))
  ((label 88)
   (if (reduce '(equal? (car instr) 'left) vs) (label 87) (label 85)))
  ((label 87)
   (:=
    code-block
    (extend
     (generate-assign 'tape-right '(cons (tape-head tape-left) tape-right) vs)
     code-block))
   (:=
    code-block
    (extend (generate-assign 'tape-left '(tape-tail tape-left) vs) code-block))
   (:= vs (update vs 'next-label (reduce '(+ 1 next-label) vs)))
   (if (reduce '(not (has-label next-label prog)) vs) (label 94) (label 86)))
  ((label 86)
   (:= vs (update vs 'instr (reduce '(lookup prog next-label) vs)))
   (if (reduce '(equal? (car instr) 'goto) vs) (label 95) (label 88)))
  ((label 85)
   (if (reduce '(equal? (car instr) 'right) vs) (label 84) (label 83)))
  ((label 84)
   (:=
    code-block
    (extend
     (generate-assign 'tape-left '(cons (tape-head tape-right) tape-left) vs)
     code-block))
   (:=
    code-block
    (extend
     (generate-assign 'tape-right '(tape-tail tape-right) vs)
     code-block))
   (:= vs (update vs 'next-label (reduce '(+ 1 next-label) vs)))
   (if (reduce '(not (has-label next-label prog)) vs) (label 94) (label 86)))
  ((label 83) (if (reduce '(equal? (car instr) 'if) vs) (label 82) (label 12)))
  ((label 82)
   (:=
    pending
    (unite (list (pair 'handle-if-goto vs) (pair 'handle-if-next vs)) pending))
   (:=
    code-block
    (extend
     (generate-if
      '(equal? (tape-head tape-right) (cadr instr))
      vs
      'handle-if-goto
      'handle-if-next)
     code-block))
   (:= residual-code (cons (cons label (reverse code-block)) residual-code))
   (if (null? pending) (label 81) (label 80)))
  ((label 81) (return (reverse residual-code)))
  ((label 80)
   (:= pp (caar pending))
   (:= vs (cdar pending))
   (:= pending (cdr pending))
   (:= label (pair pp vs))
   (if (elem? label marked) (label 79) (label 78)))
  ((label 79) (if (null? pending) (label 81) (label 80)))
  ((label 78)
   (:= marked (cons (pair pp vs) marked))
   (:= code-block '())
   (if (equal? pp 'init) (label 77) (label 76)))
  ((label 77)
   (:= vs (update vs 'next-label (reduce '(caar prog) vs)))
   (:= code-block (extend (generate-assign 'tape-left ''() vs) code-block))
   (:= vs (update vs 'instr (reduce '(lookup prog next-label) vs)))
   (if (reduce '(equal? (car instr) 'goto) vs) (label 95) (label 88)))
  ((label 76) (if (equal? pp 'handle-if-goto) (label 75) (label 15)))
  ((label 75)
   (:= vs (update vs 'next-label (reduce '(cadddr instr) vs)))
   (if (reduce '(not (has-label next-label prog)) vs) (label 74) (label 67)))
  ((label 74)
   (:=
    code-block
    (extend (generate-return '(cons tape-left tape-right) vs) code-block))
   (:= residual-code (cons (cons label (reverse code-block)) residual-code))
   (if (null? pending) (label 73) (label 72)))
  ((label 73) (return (reverse residual-code)))
  ((label 72)
   (:= pp (caar pending))
   (:= vs (cdar pending))
   (:= pending (cdr pending))
   (:= label (pair pp vs))
   (if (elem? label marked) (label 71) (label 70)))
  ((label 71) (if (null? pending) (label 73) (label 72)))
  ((label 70)
   (:= marked (cons (pair pp vs) marked))
   (:= code-block '())
   (if (equal? pp 'init) (label 89) (label 69)))
  ((label 69) (if (equal? pp 'handle-if-goto) (label 68) (label 18)))
  ((label 68)
   (:= vs (update vs 'next-label (reduce '(cadddr instr) vs)))
   (if (reduce '(not (has-label next-label prog)) vs) (label 74) (label 67)))
  ((label 67)
   (:= vs (update vs 'instr (reduce '(lookup prog next-label) vs)))
   (if (reduce '(equal? (car instr) 'goto) vs) (label 66) (label 65)))
  ((label 66)
   (:= vs (update vs 'next-label (reduce '(cadr instr) vs)))
   (if (reduce '(not (has-label next-label prog)) vs) (label 74) (label 67)))
  ((label 65)
   (if (reduce '(equal? (car instr) 'left) vs) (label 64) (label 63)))
  ((label 64)
   (:=
    code-block
    (extend
     (generate-assign 'tape-right '(cons (tape-head tape-left) tape-right) vs)
     code-block))
   (:=
    code-block
    (extend (generate-assign 'tape-left '(tape-tail tape-left) vs) code-block))
   (:= vs (update vs 'next-label (reduce '(+ 1 next-label) vs)))
   (if (reduce '(not (has-label next-label prog)) vs) (label 74) (label 67)))
  ((label 63)
   (if (reduce '(equal? (car instr) 'right) vs) (label 62) (label 61)))
  ((label 62)
   (:=
    code-block
    (extend
     (generate-assign 'tape-left '(cons (tape-head tape-right) tape-left) vs)
     code-block))
   (:=
    code-block
    (extend
     (generate-assign 'tape-right '(tape-tail tape-right) vs)
     code-block))
   (:= vs (update vs 'next-label (reduce '(+ 1 next-label) vs)))
   (if (reduce '(not (has-label next-label prog)) vs) (label 74) (label 67)))
  ((label 61) (if (reduce '(equal? (car instr) 'if) vs) (label 60) (label 55)))
  ((label 60)
   (:=
    pending
    (unite (list (pair 'handle-if-goto vs) (pair 'handle-if-next vs)) pending))
   (:=
    code-block
    (extend
     (generate-if
      '(equal? (tape-head tape-right) (cadr instr))
      vs
      'handle-if-goto
      'handle-if-next)
     code-block))
   (:= residual-code (cons (cons label (reverse code-block)) residual-code))
   (if (null? pending) (label 59) (label 58)))
  ((label 59) (return (reverse residual-code)))
  ((label 58)
   (:= pp (caar pending))
   (:= vs (cdar pending))
   (:= pending (cdr pending))
   (:= label (pair pp vs))
   (if (elem? label marked) (label 57) (label 56)))
  ((label 57) (if (null? pending) (label 59) (label 58)))
  ((label 56)
   (:= marked (cons (pair pp vs) marked))
   (:= code-block '())
   (if (equal? pp 'init) (label 77) (label 76)))
  ((label 55)
   (if (reduce '(equal? (car instr) 'write) vs) (label 54) (label 53)))
  ((label 54)
   (:=
    code-block
    (extend
     (generate-assign 'tape-right '(tape-write (cadr instr) tape-right) vs)
     code-block))
   (:= vs (update vs 'next-label (reduce '(+ 1 next-label) vs)))
   (if (reduce '(not (has-label next-label prog)) vs) (label 74) (label 67)))
  ((label 53)
   (:= code-block (extend (generate-return ''ERROR vs) code-block))
   (:= residual-code (cons (cons label (reverse code-block)) residual-code))
   (if (null? pending) (label 52) (label 51)))
  ((label 52) (return (reverse residual-code)))
  ((label 51)
   (:= pp (caar pending))
   (:= vs (cdar pending))
   (:= pending (cdr pending))
   (:= label (pair pp vs))
   (if (elem? label marked) (label 50) (label 49)))
  ((label 50) (if (null? pending) (label 52) (label 51)))
  ((label 49)
   (:= marked (cons (pair pp vs) marked))
   (:= code-block '())
   (if (equal? pp 'init) (label 48) (label 47)))
  ((label 48)
   (:= vs (update vs 'next-label (reduce '(caar prog) vs)))
   (:= code-block (extend (generate-assign 'tape-left ''() vs) code-block))
   (:= vs (update vs 'instr (reduce '(lookup prog next-label) vs)))
   (if (reduce '(equal? (car instr) 'goto) vs) (label 95) (label 88)))
  ((label 47) (if (equal? pp 'handle-if-goto) (label 46) (label 45)))
  ((label 46)
   (:= vs (update vs 'next-label (reduce '(cadddr instr) vs)))
   (if (reduce '(not (has-label next-label prog)) vs) (label 74) (label 67)))
  ((label 45) (if (equal? pp 'handle-if-next) (label 44) (label 19)))
  ((label 44)
   (:= vs (update vs 'next-label (reduce '(+ 1 next-label) vs)))
   (if (reduce '(not (has-label next-label prog)) vs) (label 43) (label 38)))
  ((label 43)
   (:=
    code-block
    (extend (generate-return '(cons tape-left tape-right) vs) code-block))
   (:= residual-code (cons (cons label (reverse code-block)) residual-code))
   (if (null? pending) (label 42) (label 41)))
  ((label 42) (return (reverse residual-code)))
  ((label 41)
   (:= pp (caar pending))
   (:= vs (cdar pending))
   (:= pending (cdr pending))
   (:= label (pair pp vs))
   (if (elem? label marked) (label 40) (label 39)))
  ((label 40) (if (null? pending) (label 42) (label 41)))
  ((label 39)
   (:= marked (cons (pair pp vs) marked))
   (:= code-block '())
   (if (equal? pp 'init) (label 89) (label 69)))
  ((label 38)
   (:= vs (update vs 'instr (reduce '(lookup prog next-label) vs)))
   (if (reduce '(equal? (car instr) 'goto) vs) (label 37) (label 36)))
  ((label 37)
   (:= vs (update vs 'next-label (reduce '(cadr instr) vs)))
   (if (reduce '(not (has-label next-label prog)) vs) (label 43) (label 38)))
  ((label 36)
   (if (reduce '(equal? (car instr) 'left) vs) (label 35) (label 34)))
  ((label 35)
   (:=
    code-block
    (extend
     (generate-assign 'tape-right '(cons (tape-head tape-left) tape-right) vs)
     code-block))
   (:=
    code-block
    (extend (generate-assign 'tape-left '(tape-tail tape-left) vs) code-block))
   (:= vs (update vs 'next-label (reduce '(+ 1 next-label) vs)))
   (if (reduce '(not (has-label next-label prog)) vs) (label 43) (label 38)))
  ((label 34)
   (if (reduce '(equal? (car instr) 'right) vs) (label 33) (label 32)))
  ((label 33)
   (:=
    code-block
    (extend
     (generate-assign 'tape-left '(cons (tape-head tape-right) tape-left) vs)
     code-block))
   (:=
    code-block
    (extend
     (generate-assign 'tape-right '(tape-tail tape-right) vs)
     code-block))
   (:= vs (update vs 'next-label (reduce '(+ 1 next-label) vs)))
   (if (reduce '(not (has-label next-label prog)) vs) (label 43) (label 38)))
  ((label 32) (if (reduce '(equal? (car instr) 'if) vs) (label 31) (label 26)))
  ((label 31)
   (:=
    pending
    (unite (list (pair 'handle-if-goto vs) (pair 'handle-if-next vs)) pending))
   (:=
    code-block
    (extend
     (generate-if
      '(equal? (tape-head tape-right) (cadr instr))
      vs
      'handle-if-goto
      'handle-if-next)
     code-block))
   (:= residual-code (cons (cons label (reverse code-block)) residual-code))
   (if (null? pending) (label 30) (label 29)))
  ((label 30) (return (reverse residual-code)))
  ((label 29)
   (:= pp (caar pending))
   (:= vs (cdar pending))
   (:= pending (cdr pending))
   (:= label (pair pp vs))
   (if (elem? label marked) (label 28) (label 27)))
  ((label 28) (if (null? pending) (label 30) (label 29)))
  ((label 27)
   (:= marked (cons (pair pp vs) marked))
   (:= code-block '())
   (if (equal? pp 'init) (label 77) (label 76)))
  ((label 26)
   (if (reduce '(equal? (car instr) 'write) vs) (label 25) (label 24)))
  ((label 25)
   (:=
    code-block
    (extend
     (generate-assign 'tape-right '(tape-write (cadr instr) tape-right) vs)
     code-block))
   (:= vs (update vs 'next-label (reduce '(+ 1 next-label) vs)))
   (if (reduce '(not (has-label next-label prog)) vs) (label 43) (label 38)))
  ((label 24)
   (:= code-block (extend (generate-return ''ERROR vs) code-block))
   (:= residual-code (cons (cons label (reverse code-block)) residual-code))
   (if (null? pending) (label 23) (label 22)))
  ((label 23) (return (reverse residual-code)))
  ((label 22)
   (:= pp (caar pending))
   (:= vs (cdar pending))
   (:= pending (cdr pending))
   (:= label (pair pp vs))
   (if (elem? label marked) (label 21) (label 20)))
  ((label 21) (if (null? pending) (label 23) (label 22)))
  ((label 20)
   (:= marked (cons (pair pp vs) marked))
   (:= code-block '())
   (if (equal? pp 'init) (label 48) (label 47)))
  ((label 19) (return (error "Some stupid error")))
  ((label 18) (if (equal? pp 'handle-if-next) (label 17) (label 16)))
  ((label 17)
   (:= vs (update vs 'next-label (reduce '(+ 1 next-label) vs)))
   (if (reduce '(not (has-label next-label prog)) vs) (label 43) (label 38)))
  ((label 16) (return (error "Some stupid error")))
  ((label 15) (if (equal? pp 'handle-if-next) (label 14) (label 13)))
  ((label 14)
   (:= vs (update vs 'next-label (reduce '(+ 1 next-label) vs)))
   (if (reduce '(not (has-label next-label prog)) vs) (label 43) (label 38)))
  ((label 13) (return (error "Some stupid error")))
  ((label 12)
   (if (reduce '(equal? (car instr) 'write) vs) (label 11) (label 10)))
  ((label 11)
   (:=
    code-block
    (extend
     (generate-assign 'tape-right '(tape-write (cadr instr) tape-right) vs)
     code-block))
   (:= vs (update vs 'next-label (reduce '(+ 1 next-label) vs)))
   (if (reduce '(not (has-label next-label prog)) vs) (label 94) (label 86)))
  ((label 10)
   (:= code-block (extend (generate-return ''ERROR vs) code-block))
   (:= residual-code (cons (cons label (reverse code-block)) residual-code))
   (if (null? pending) (label 9) (label 8)))
  ((label 9) (return (reverse residual-code)))
  ((label 8)
   (:= pp (caar pending))
   (:= vs (cdar pending))
   (:= pending (cdr pending))
   (:= label (pair pp vs))
   (if (elem? label marked) (label 7) (label 6)))
  ((label 7) (if (null? pending) (label 9) (label 8)))
  ((label 6)
   (:= marked (cons (pair pp vs) marked))
   (:= code-block '())
   (if (equal? pp 'init) (label 48) (label 47)))
  ((label 5) (if (equal? pp 'handle-if-goto) (label 4) (label 3)))
  ((label 4)
   (:= vs (update vs 'next-label (reduce '(cadddr instr) vs)))
   (if (reduce '(not (has-label next-label prog)) vs) (label 74) (label 67)))
  ((label 3) (if (equal? pp 'handle-if-next) (label 2) (label 1)))
  ((label 2)
   (:= vs (update vs 'next-label (reduce '(+ 1 next-label) vs)))
   (if (reduce '(not (has-label next-label prog)) vs) (label 43) (label 38)))
  ((label 1) (return (error "Some stupid error"))))
